// api/ai.js
import OpenAI from "openai";

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY, // âœ… Vercel env iÃ§ine ekle
});

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "YalnÄ±zca POST destekleniyor" });
  }

  try {
    const { message } = req.body;

    if (!message) {
      return res.status(400).json({ error: "Mesaj boÅŸ olamaz" });
    }

    const completion = await client.chat.completions.create({
      model: "gpt-4o-mini", // hÄ±zlÄ± ve ucuz
      messages: [
        {
          role: "system",
          content: `
          Sen bir market sipariÅŸ asistanÄ±sÄ±n.
          KullanÄ±cÄ±nÄ±n konuÅŸmasÄ±nÄ± analiz et ve ÅŸu formatta JSON dÃ¶n:
          {
            "product": "Ã¼rÃ¼n adÄ±",
            "quantity": "miktar",
            "unit": "kg/adet",
            "action": "add/remove/info"
          }
          Sadece JSON dÃ¶ndÃ¼r, baÅŸka aÃ§Ä±klama yazma.
          `
        },
        { role: "user", content: message }
      ],
      temperature: 0.2,
    });

    let aiResponse = completion.choices[0].message.content.trim();

    // JSON parse et
    let parsed = JSON.parse(aiResponse);

    return res.status(200).json(parsed);
  } catch (err) {
    console.error("ğŸ”¥ API HatasÄ±:", err);
    return res.status(500).json({ error: "Sunucu hatasÄ±" });
  }
}
